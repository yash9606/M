import pandas as pd 
import matplotlib.pyplot as plt 
from sklearn.datasets import load_iris 
from sklearn.decomposition import PCA 
from sklearn.preprocessing import StandardScaler 
# Load the Iris dataset 
iris = load_iris() 
X = iris.data 
y = iris.target 
target_names = iris.target_names 
# Standardize the features (mean = 0, variance = 1) 
scaler = StandardScaler() 
X_standardized = scaler.fit_transform(X) 
# Apply PCA to reduce dimensions from 4 to 2 
pca = PCA(n_components=2) 
X_pca = pca.fit_transform(X_standardized) 
# Create a DataFrame for the PCA results 
pca_df = pd.DataFrame(data=X_pca, columns=['Principal Component 1', 
'Principal Component 2']) 
pca_df['Target'] = y 
# Plot the PCA results 
plt.figure(figsize=(8, 6))
for target, color, label in zip(range(len(target_names)), ['r', 'g', 'b'], 
target_names): 
   plt.scatter( 
       pca_df.loc[pca_df['Target'] == target, 'Principal Component 1'], 
       pca_df.loc[pca_df['Target'] == target, 'Principal Component 2'], 
       color=color, 
       alpha=0.6, 
       label=label 
   ) 
plt.title('PCA of Iris Dataset (2 Components)', fontsize=16) 
plt.xlabel('Principal Component 1', fontsize=12) 
plt.ylabel('Principal Component 2', fontsize=12) 
plt.legend(title='Target', loc='best') 
plt.grid(alpha=0.3) 
plt.show()
